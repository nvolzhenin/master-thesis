import logging
import asyncio
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters
from predictor import MatchPredictor


# –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞
TELEGRAM_TOKEN = "my-token"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –¥–≤—É—Ö –∏–≥—Ä–æ–∫–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –ò–º—è1 vs –ò–º—è2"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.strip()

    if "vs" not in text:
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –¥–≤—É—Ö –∏–≥—Ä–æ–∫–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: `–ò–≥—Ä–æ–∫1 vs –ò–≥—Ä–æ–∫2`")
        return

    p1_name, p2_name = map(str.strip, text.split("vs", 1))
    model = MatchPredictor()
    result = model.predict(p1_name, p2_name)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    msg = f"üéæ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –º–∞—Ç—á–∞:\n"
    msg += f"üë§ {result['player_1']} vs {result['player_2']}\n"
    msg += f"üìä –°—á—ë—Ç: {result['predicted_score']}\n"
    msg += f"üïí –í—Ä–µ–º—è: {result['predicted_minutes']} –º–∏–Ω\n"

    # –î–æ–±–∞–≤–∏–º –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
    if result.get("note"):
        msg += f"\nüìù {result['note']}"

    await update.message.reply_text(msg)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE) -> None:
    logger.error(msg="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:", exc_info=context.error)

# –ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞
def main() -> None:
    app = Application.builder().token(TELEGRAM_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.add_error_handler(error_handler)

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞—é —Å–æ–æ–±—â–µ–Ω–∏—è...")
    app.run_polling()

if __name__ == "__main__":
    main()